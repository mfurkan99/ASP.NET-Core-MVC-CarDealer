// <auto-generated />
using System;
using CarDealer.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDealer.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240906124105_firstv4")]
    partial class firstv4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarDealer.Entity.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kilometer")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Mercedes-Benz",
                            CategoryId = 1,
                            Color = "Siyah",
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(1215),
                            ImageUrl = "",
                            Kilometer = 45000,
                            Model = "E220d",
                            Price = 3800000,
                            Status = true,
                            Year = 2018
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Land Rover",
                            CategoryId = 2,
                            Color = "White",
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(1229),
                            ImageUrl = "",
                            Kilometer = 65000,
                            Model = "Range Rover",
                            Price = 10000000,
                            Status = true,
                            Year = 2020
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Audi",
                            CategoryId = 2,
                            Color = "Siyah",
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(1231),
                            ImageUrl = "",
                            Kilometer = 187000,
                            Model = "Q7",
                            Price = 4000000,
                            Status = true,
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Volvo",
                            CategoryId = 1,
                            Color = "Blue",
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(1232),
                            ImageUrl = "",
                            Kilometer = 38000,
                            Model = "S90",
                            Price = 3500000,
                            Status = true,
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            Brand = "BMW",
                            CategoryId = 1,
                            Color = "Gray",
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(1234),
                            ImageUrl = "",
                            Kilometer = 50000,
                            Model = "5.20i",
                            Price = 2800000,
                            Status = true,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("CarDealer.Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(2190),
                            Name = "Otomobil",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(2194),
                            Name = "Arazi, SUV & Pickup ",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 9, 6, 15, 41, 5, 668, DateTimeKind.Local).AddTicks(2195),
                            Name = "Motosiklet",
                            Status = true
                        });
                });

            modelBuilder.Entity("CarDealer.Entity.Entities.Car", b =>
                {
                    b.HasOne("CarDealer.Entity.Entities.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CarDealer.Entity.Entities.Category", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
